* The Emacs Desktop Notification Center

The Emacs Desktop Notification Center (EDNC) is
an Emacs package written in pure Lisp that
implements a Desktop Notifications service according to
[[https://people.gnome.org/~mccann/docs/notification-spec/notification-spec-latest.html][the freedesktop.org specification]].
EDNC aspires to be a small, but flexible drop-in replacement
of standalone daemons like [[https://dunst-project.org/][Dunst]].
A global minor mode ~ednc-mode~ tracks active notifications,
which users can access by the function ~ednc-notifications~.
Users can add functions
to the hook ~ednc-notification-amend-functions~ to amend data and
to the hook ~ednc-notifications-present-functions~ to present notifications
as they see fit.
To be useful out of the box,
default hooks record all notifications
in an interactive log buffer ~*ednc-log*~.

** Basic Usage

For now, simply execute the ~package-install-file~ command and
point it to a local copy of this repository.
The package will hopefully end up on [[https://melpa.org][MELPA]] in due time.

After installation, ensure that no other notification daemon is active,
execute the ~ednc-mode~ command to activate the global minor mode, and
observe the interactive log buffer ~*ednc-log*~.

Every notification recorded in the log buffer has text properties so that
- the left mouse button invokes the notification's default action,
- the middle mouse button shows a menu of all available actions, and
- the right mouse button closes the notification.

** Advanced Usage

You can also
retrieve currently active notifications with the function ~ednc-notifications~
whenever the (abnormal) hook ~ednc-notifications-changed-functions~ runs.
Functions in that hook are given access to the exact notification that changed.
Read on for some suggestions.

*** Show Active Notifications

To simply display all active notifications in the mode-line,
first define a function that returns active notifications as a string:
#+NAME: list
#+BEGIN_SRC emacs-lisp :tangle yes
(defun list-notifications ()
  (mapconcat #'ednc-format-notification (ednc-notifications) ""))
#+END_SRC

Alternatively, only include the newest notification per application:
#+NAME: stack
#+BEGIN_SRC emacs-lisp :tangle yes
(defun stack-notifications (&optional hide)
  (mapconcat (lambda (notification)
               (let ((app-name (ednc-notification-app-name notification)))
                 (unless (member app-name hide)
                   (push app-name hide)
                   (ednc-format-notification notification))))
             (ednc-notifications) ""))
#+END_SRC

Use the respective function's result as part of your mode-line
every time a new notification appears, or an old one is removed:
#+BEGIN_SRC emacs-lisp
(nconc global-mode-string '((:eval (stack-notifications))))  ; or list
(add-hook 'ednc-notification-present-functions (lambda (&rest _)
                                                 (force-mode-line-update t)))
#+END_SRC
